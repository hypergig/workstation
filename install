#! /usr/bin/env sh
set -euo pipefail


# helpers

function log {
    printf "\e[36m%s\e[0m\n" "${@}"
}

function run {
    printf "\e[35;1m%s\e[0m\n" "- $(sed 's/_/ /g' <<< "$@") -"
    $@
    printf '\n\n'
}

function setx {
    set -x
    "$@"
    { set +x; } 2> /dev/null
}


# operations

function install_xcode {
    if xcode-select -p; then
        log "xcode looks ok"
        return
    fi
    log "installing xcode"
    setx xcode-select --install
    read -p "press enter when completed..."
    hash -r
}

function ssh_keys {
    function check {
        { ssh git@github.com ||:; } 2>&1 | grep "You've successfully authenticated"
    }
    if check; then
        log "ssh keys look ok"
        return
    fi
    log "install ssh keys"
    open https://github.com/settings/keys
    read -p "press enter when completed..."
    check
}

function install_brew {
    if which brew; then
        log "brew looks ok"
        return
    fi
    log "install homebrew"
    open https://brew.sh/
    read -p "press enter when completed..."
    hash -r
}

function workstation_repo {
    local workstation_repo="${HOME}/repos/workstation"
    if [ -d "${workstation_repo}/.git" ]; then
        log "workstation repo looks ok"
    else
        log "cloning workstation repo"
        mkdir -vp "${HOME}/repos"
        cd "${HOME}/repos"
        setx git clone git@github.com:hypergig/workstation.git
    fi
    setx cd ${workstation_repo}
    setx pwd
}

function setup_vars {
    source config/.vars
    hash -r
    echo "brew prefix: ${HOMEBREW_PREFIX}"
}

function brew_bundle {
    log "running brew bundle"
    setx brew bundle --no-lock
    hash -r

    log "setting up startup services"
    local start_up_services=(
        'skhd'
        'yabai'
    )

    for service in "${start_up_services[@]}"; do
        setx brew services start "${service}"
    done
}


function dot_files {
    local links=(
        "config/.bash_profile ${HOME}/.bash_profile"
        "config/.gitconfig ${HOME}/.gitconfig"
        "config/.vars ${HOME}/.vars"
        "config/init.vim ${HOME}/.config/nvim/init.vim"
        "config/alacritty.yml ${HOME}/.config/alacritty/alacritty.yml"
        "config/NeoSolarized.vim ${HOME}/.config/nvim/colors/NeoSolarized.vim"
        "config/skhdrc ${HOME}/.config/skhd/skhdrc"
        "config/yabairc ${HOME}/.config/yabai/yabairc"
        "config/yabairc ${HOME}/.config/yabai/yabairc"
    )
    for link in "${links[@]}"; do
        read _ dest <<< "${link}"
        mkdir -pv "$(dirname "${dest}")"
        ln -srvf ${link}
    done
}

function setup_shell {
    local bash_shell="${HOMEBREW_PREFIX}/bin/bash"
    local shells='/etc/shells'

    if grep "${bash_shell}" "${shells}"; then
        log "bash shell is already listed in ${shells}"
    else
        log "adding bash to list of shells"
        setx sudo sh -c "echo ${bash_shell} >> ${shells}"
    fi

    if [ "${SHELL}" == "${bash_shell}" ]; then
        log "bash shell is already set as default shell"
    else
        log "setting bash as default shell"
        setx chsh -s "${bash_shell}"
    fi
}

function set_desktop_background {
    setx osascript -e "tell application \"Finder\" to set desktop picture to POSIX file \"${_workstation_dir}/config/backgrounds/solarizedBig.png\""
}

function install_defaults {
    setx cd config/defaults
    for scope in *; do
        setx defaults import "${scope}" "${scope}"
    done
    setx cd -
}


# install

operations=(
    install_xcode
    ssh_keys
    install_brew
    workstation_repo
    setup_vars
    brew_bundle
    dot_files
    setup_shell
    set_desktop_background
    install_defaults
)

for operation in "${operations[@]}"; do
    run "${operation}"
done
